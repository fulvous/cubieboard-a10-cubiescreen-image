#!/bin/bash

#Cubiecopiadora realiza imagenes para memoria SD para cubieboard A10
#Copyright (C) 2017 Leon Ramos @fulvous
#
#Este archivo es parte de Cubiecopiadora
#
#Cubiecopiadora es software libre: Puede redistribuirlo y/o 
#modificarlo bajo los terminos de la Licencia de uso publico 
#general GNU de la Fundacion de software libre, ya sea la
#version 3 o superior de la licencia.
#
#Cubiecopiadora es distribuida con la esperanza de que sera util,
#pero sin ningun tipo de garantia; inclusive sin la garantia
#implicita de comercializacion o para un uso particular.
#Vea la licencia de uso publico general GNU para mas detalles.
#
#Deberia de recibir uan copia de la licencia de uso publico
#general junto con Cubiecopiadora, de lo contrario, vea
#<http://www.gnu.org/licenses/>.
#
#This file is part of Cubiecopiadora
#
#Cubiecopiadora is free software: you can redistribute it and/or 
#modify it under the terms of the GNU General Public License 
#as published by the Free Software Foundation, either version 3 
#of the License, or any later version.
#
#Cubiecopiadora is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with Cubiecopiadora  If not, see 
#<http://www.gnu.org/licenses/>.

source herramientax/herramientax

#Evita que se ejecute el programa si hay errores
set -e

PWD_F="$(pwd)"

#Valores de ejecucion
VERBOSE=0
BORRAR=0
UBOOT_C=1
KERNEL_C=1
KERNEL_M=0
KERNEL_P=1
IMAGEN_C=1
DEBOOTSTRAP_C=1
DEBOOTSTRAP_G=0
LOG="${PWD_F}/cubiecopiadora.log"
SIZE_G="3"


#Locales
#LOCAL="es_MX.UTF-8"
#LOCALES="es_MX.UTF-8 UTF-8"
#LENGUAJE="es_MX:es"
LOCAL="C"
LOCALES="es_MX.UTF-8 UTF-8\nes_US.UTF-8 UTF-8"
LENGUAJE="en_US:en"
export LANG=$LOCAL
export LANGUAGE=$LENGUAJE
export LC_CTYPE=$LOCAL
export LC_TYPE=$LOCAL
export LC_NUMERIC=$LOCAL
export LC_TIME=$LOCAL
export LC_COLLATE=$LOCAL
export LC_MONETARY=$LOCAL
export LC_MESSAGES=$LOCAL
export LC_PAPER=$LOCAL
export LC_NAME=$LOCAL
export LC_ADDRESS=$LOCAL
export LC_TELEPHONE=$LOCAL
export LC_MEASUREMENT=$LOCAL
export LC_IDENTIFICATION=$LOCAL
export LC_ALL=$LOCAL

#Folders
KERNEL_F="linux-sunxi"
SUNXITOOLS_F="sunxi-tools"
UBOOT_F="u-boot-sunxi"
SALIDA_F="salida"
TMP_F="tmp"
DEBOOTSTRAP_F="sistemas"
FOLDERS="${KERNEL_F} ${UBOOT_F} ${SALIDA_F} ${TMP_F} ${DEBOOTSTRAP_F}"


#Valores para compilacion
TARJETA="Cubieboard"
CONFIG_TARJETA="sun4i_defconfig"
KERNEL_V="3.4"
UBOOT_V="sunxi"

#Valores para la imagen
DISTRO="xenial"
MNT="mnt"
IMAGEN="${TARJETA}-${KERNEL_V}-$(date +%Y%m%d).img"

DEBOOTSTRAP_I=${DISTRO}-db
DEBOOTSTRAP_EXT="tar.gz"
PAQUETES_DB="sudo,vim"

#Banderas de control
VIRTUALES_M=0
KPARTX_M=0

#Importando bibliotecas
source include/sys/salir.sh
source include/sys/uso.sh
source include/sys/dependencias.sh
source include/sys/borrar_temps.sh
source include/sys/descarga.sh
source include/sys/compila.sh
source include/sys/prepara_folders.sh
source include/sys/debootstrap.sh
source include/sys/crear_imagen.sh
source include/sys/formatear_particiones.sh
source include/sys/instalar_boot.sh
source include/sys/instalar_root.sh
source include/sys/archivos_config_sistema.sh
source include/sys/actualizar.sh
source include/sys/firstboot.sh
source include/sys/lanza_custom_chroot.sh
source include/sys/carpeta_salida.sh

#Solicitar ejecutar salir
trap salir EXIT

#Checando si es superusuario
RES=es_root

while getopts "d:gkmpurs:vh" OPT ; do
  case $OPT in
    d)
      PLATFORM=${OPTARG}
      case $PLATFORM in
        "wheezy")
          DISTRO=$PLATFORM
          ;;
        "WHEEZY")
          DISTRO="wheezy"
          ;;
        "xenial")
          DISTRO=$PLATFORM
          ;;
        "XENIAL")
          DISTRO="xenial"
          ;;
        *)
          res_err "Opcion invalida" "$OPTARG" "ERROR"
          uso
          exit 1
          ;;
      esac
      ;;      
    g)
      DEBOOTSTRAP_G=1
      DEBOOTSTRAP_I=${DISTRO}-db-g
      ;;
    i)
      IMAGEN_C=0
      ;;
    k)
      KERNEL_C=0
      ;;
    m)
      KERNEL_M=1
      ;;
    p)
      KERNEL_P=0
      ;;
    u)
      UBOOT_C=0
      ;;
    s)
      SIZE_G=${OPTARG}
      if [ -z "${SIZE_G}" ] || [ ${SIZE_G} -eq 0 ] ; then
        res_err "Opcion invalida" "$OPTARG" "ERROR"
        uso
        exit 1
      fi
      ;;
    r)
      BORRAR=1
      ;;
    v)
      VERBOSE=1
      ;;
    h)
      uso
      exit 0
      ;;
    \?)
      res_err "Opcion invalida" "$OPTARG" "ERROR"
      uso
      exit 1
      ;;
  esac
done

case ${DISTRO} in
  wheezy)
    source include/sys/wheezy.sh
    ;;
  xenial)
    source include/sys/xenial.sh
    ;;
esac

debug "Tamaño de imagen: ${SIZE_G} GB"

#Checando configuraciones adicionales
if [ -f ${PWD_F}/include/configs.sh ] ; then
  informa "Cargando configuraciones" "${PWD_F}/include/configs.sh"
  source ${PWD_F}/include/configs.sh
  res_ok "Cargadas configuraciones" "${PWD_F}/include/configs.sh" "Exitoso"
fi

#Instalando paquetes necesarios
dependencias

#Borrar carpetas
borrar_temps

#Descarga fuentes
descarga

#Preparando folders temporales y de salida
prepara_folders

#Compilando
compila

### Continuando con el proceso de creacion de imagen
if [ "$IMAGEN_C" == "1" ] ; then
  informa "Generando imagen" "uSD" "${IMAGEN}"
  
  #Generando debootstrap
  debootstrap

  #Crear archivo de imagen y copiar u-boot
  crear_imagen

  #Montar particiones y formatearlas
  formatear_particiones

  #Instalando particion boot
  instalar_boot

  #Instalando particion root
  instalar_root

  #Instalando sources
  informa "Agregando" "sources.list"
  sources
  res_ok "Archivo" "Sources.list" "Exitoso"
  
  #Agregando fstab,interfaces,resolv.conf
  archivos_config_sistema

  #Montar sistemas virtuales y actualizar paquetes
  actualizar

  #Crear archivo firstboot
  firstboot
  

  ##Procesos adicionales después de montado si es gráfico
  if [ "${DEBOOTSTRAP_G}" ==  "1" ] ; then
    desktop_firstboot
  fi


  #Ejecutando los scripts custom-fuera.sh
  informa "Ejecutando" "include/custom-fuera.sh"
  source ${PWD_F}/include/custom-fuera.sh

  #Ejecutar el script custom-chroot.sh
  lanza_custom_chroot

  #Desmontar sistemas
  salir
  
  #Moviendo la imagen a la carpeta de salida
  carpeta_salida

fi

